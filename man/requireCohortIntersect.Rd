% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/requireCohortIntersectFlag.R
\name{requireCohortIntersect}
\alias{requireCohortIntersect}
\title{Require cohort subjects are present (or absence) in another cohort}
\usage{
requireCohortIntersect(
  cohort,
  targetCohortTable,
  window,
  cohortId = NULL,
  targetCohortId = NULL,
  indexDate = "cohort_start_date",
  targetStartDate = "cohort_start_date",
  targetEndDate = "cohort_end_date",
  censorDate = NULL,
  negate = FALSE,
  name = tableName(cohort)
)
}
\arguments{
\item{cohort}{A cohort table in a cdm reference.}

\item{targetCohortTable}{Name of the cohort that we want to check for
intersect.}

\item{window}{Window to consider events over.}

\item{cohortId}{IDs of the cohorts to modify. If NULL, all cohorts will be
used; otherwise, only the specified cohorts will be modified, and the
rest will remain unchanged.}

\item{targetCohortId}{Vector of cohort definition ids to include.}

\item{indexDate}{Variable in x that contains the date to compute the
intersection.}

\item{targetStartDate}{Date of reference in cohort table, either for start
(in overlap) or on its own (for incidence).}

\item{targetEndDate}{Date of reference in cohort table, either for end
(overlap) or NULL (if incidence).}

\item{censorDate}{Whether to censor overlap events at a specific date or a
column date of x.}

\item{negate}{If set as TRUE, criteria will be applied as exclusion
rather than inclusion (i.e. require absence in another cohort).}

\item{name}{Name of the new cohort with the future observation restriction.}
}
\value{
Cohort table with only those in the other cohort kept (or those that
are not in the cohort if negate = TRUE)
}
\description{
\code{requireCohortIntersect()} filters a cohort table based on a requirement
that an individual is seen (or not seen) in another cohort in some time
window around an index date.
}
\examples{
\donttest{
library(CohortConstructor)
cdm <- mockCohortConstructor()
cdm$cohort1 |>
  requireCohortIntersect(targetCohortTable = "cohort2",
                             targetCohortId = 1,
                             indexDate = "cohort_start_date",
                             window = c(-Inf, 0))
}
}
