% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/matchCohorts.R
\name{matchCohorts}
\alias{matchCohorts}
\title{Generate a new cohort matched cohort from a preexisting target cohort. The
new cohort will contain individuals not included in the target cohort with
same year of birth (matchYearOfBirth = TRUE) and same sex (matchSex = TRUE).}
\usage{
matchCohorts(
  cohort,
  cohortId = NULL,
  matchSex = TRUE,
  matchYearOfBirth = TRUE,
  ratio = 1,
  name = tableName(cohort),
  .softValidation = FALSE
)
}
\arguments{
\item{cohort}{A cohort table in a cdm reference.}

\item{cohortId}{Cohort definition id to match from the target cohort.
If NULL all the cohort definition id present in the target cohort will be
matched.}

\item{matchSex}{Whether to match in sex.}

\item{matchYearOfBirth}{Whether to match in year of birth.}

\item{ratio}{Number of allowed matches per individual in the target cohort.}

\item{name}{Name of the new generated cohort set.}

\item{.softValidation}{Whether to perform a soft validation of consistency.
If set to FALSE four additional checks will be performed: 1) check that
cohort end date is not before cohort start date, 2) check that there are no
missing values in required columns, 3) check that cohort duration is all
within observation period, and 4) check that there are no overlapping cohort
entries.}
}
\value{
A cohort table.
}
\description{
Generate a new cohort matched cohort from a preexisting target cohort. The
new cohort will contain individuals not included in the target cohort with
same year of birth (matchYearOfBirth = TRUE) and same sex (matchSex = TRUE).
}
\examples{
library(CohortConstructor)
library(dplyr)
cdm <- mockCohortConstructor(nPerson = 200)
cdm$new_matched_cohort <- cdm$cohort2 |>
  matchCohorts(
    name = "new_matched_cohort",
    cohortId = 2,
    matchSex = TRUE,
    matchYearOfBirth = TRUE,
    ratio = 1)
cdm$new_matched_cohort

}
