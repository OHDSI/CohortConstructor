[{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/a02_applying_cohort_restrictions.html","id":"keep-only-the-first-record-per-person","dir":"Articles","previous_headings":"","what":"Keep only the first record per person","title":"Applying cohort restrictions","text":"Individuals can contribute multiple records per cohort. However now ’ll keep earliest cohort entry remaining records using restrictToFirstEntry() CohortConstructor. can see one record per person cohort. Note, applying criteria later applying criteria result different result. ’re requiring individuals meet inclusion criteria time first use diclofenac acetaminophen.","code":"cdm$medications <- cdm$medications %>%    restrictToFirstEntry(indexDate = \"cohort_start_date\")  cohortCount(cdm$medications) #> # A tibble: 2 × 3 #>   cohort_definition_id number_records number_subjects #>                  <int>          <dbl>           <dbl> #> 1                    1            830             830 #> 2                    2           2580            2580"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/a02_applying_cohort_restrictions.html","id":"applying-restrictions-on-patient-demographics","dir":"Articles","previous_headings":"","what":"Applying restrictions on patient demographics","title":"Applying cohort restrictions","text":"Using requireDemographics() ’ll require individuals medications cohort female , relative cohort start date, 18 85 least 30 days prior observation time database. can see many people people excluded based demographic requirements.","code":"cdm$medications <- cdm$medications %>%    requireDemographics(indexDate = \"cohort_start_date\",                        ageRange = list(c(18, 85)),                       sex = \"Female\",                        minPriorObservation = 30) cohort_attrition(cdm$medications) %>%    dplyr::filter(reason == \"Demographic requirements\") %>%    dplyr::glimpse() #> Rows: 2 #> Columns: 7 #> $ cohort_definition_id <int> 2, 1 #> $ number_records       <dbl> 427, 435 #> $ number_subjects      <dbl> 427, 435 #> $ reason_id            <dbl> 9, 9 #> $ reason               <chr> \"Demographic requirements\", \"Demographic requirem… #> $ excluded_records     <dbl> 2153, 395 #> $ excluded_subjects    <dbl> 2153, 395"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/a02_applying_cohort_restrictions.html","id":"restrictions-on-calendar-dates","dir":"Articles","previous_headings":"","what":"Restrictions on calendar dates","title":"Applying cohort restrictions","text":"Next can use requireInDateRange() keep records cohort entry particular date range. , can track cohort attrition","code":"cdm$medications <- cdm$medications %>%    requireInDateRange(indexDate = \"cohort_start_date\",                       dateRange = as.Date(c(\"2000-01-01\", \"2015-01-01\"))) cohort_attrition(cdm$medications) %>%    dplyr::filter(reason == \"cohort_start_date between 2000-01-01 and 2015-01-01\") %>%    dplyr::glimpse() #> Rows: 2 #> Columns: 7 #> $ cohort_definition_id <int> 2, 1 #> $ number_records       <dbl> 101, 179 #> $ number_subjects      <dbl> 101, 179 #> $ reason_id            <dbl> 10, 10 #> $ reason               <chr> \"cohort_start_date between 2000-01-01 and 2015-01… #> $ excluded_records     <dbl> 326, 256 #> $ excluded_subjects    <dbl> 326, 256"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/a02_applying_cohort_restrictions.html","id":"restrictions-on-cohort-presence","dir":"Articles","previous_headings":"","what":"Restrictions on cohort presence","title":"Applying cohort restrictions","text":"require individuals medication cohorts history GI bleed. can use requireCohortIntersectFlag() function. Instead requiring individuals history GI bleed, instead require don’t history . case can use requireCohortIntersectFlag() function, time set negate argument FALSE require individuals’ absence cohort rather presence .","code":"cdm$medications_gi_bleed <- cdm$medications  %>%   requireCohortIntersectFlag(targetCohortTable = \"gi_bleed\",                               targetCohortId = 1,                              indexDate = \"cohort_start_date\",                               window = c(-Inf, 0)) cohort_count(cdm$medications_gi_bleed) #> # A tibble: 2 × 3 #>   cohort_definition_id number_records number_subjects #>                  <int>          <dbl>           <dbl> #> 1                    2              7               7 #> 2                    1              0               0 cdm$medications_no_gi_bleed <- cdm$medications %>%   requireCohortIntersectFlag(targetCohortTable = \"gi_bleed\",                               targetCohortId = 1,                              indexDate = \"cohort_start_date\",                               window = c(-Inf, 0),                               negate = TRUE) cohort_count(cdm$medications_no_gi_bleed) #> # A tibble: 2 × 3 #>   cohort_definition_id number_records number_subjects #>                  <int>          <dbl>           <dbl> #> 1                    1            179             179 #> 2                    2             94              94"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/a03_age_sex_matching.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Generate a matched age and sex cohort","text":"CohortConstructor packages includes function obtain age sex matched cohort, generateMatchedCohortSet() function. vignette, explore usage function.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/a03_age_sex_matching.html","id":"create-mock-data","dir":"Articles","previous_headings":"Introduction","what":"Create mock data","title":"Generate a matched age and sex cohort","text":"first use mockDrugUtilisation() function DrugUtilisation package create mock data. use cohort1 explore generateMatchedCohortSet(), let us first use cohort_attrition() CDMConnector package explore cohort:","code":"library(CohortConstructor) library(dplyr) library(DrugUtilisation)  cdm <- mockDrugUtilisation(numberIndividual = 1000) CDMConnector::cohort_set(cdm$cohort1) #> # A tibble: 3 × 2 #>   cohort_definition_id cohort_name #>                  <int> <chr>       #> 1                    1 cohort_1    #> 2                    2 cohort_2    #> 3                    3 cohort_3"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/a03_age_sex_matching.html","id":"use-generatematchedcohortset-to-create-an-age-sex-matched-cohort","dir":"Articles","previous_headings":"","what":"Use generateMatchedCohortSet() to create an age-sex matched cohort","title":"Generate a matched age and sex cohort","text":"Let us first see example function works. usage, need provide cdm object, targetCohortName, name table containing cohort interest, name new generated tibble containing cohort matched cohort. also use argument targetCohortId specify want matched cohort cohort_definition_id = 1. Notice generated tibble, two cohorts: cohort_definition_id = 1 (original cohort), cohort_definition_id = 4 (matched cohort). target_cohort_name column indicates original cohort. match_sex match_year_of_birth adopt boolean values (TRUE/FALSE) indicating matched sex age, . match_status indicate original cohort (target) matched cohort (matched). target_cohort_id indicates cohort_id original cohort. Check exclusion criteria applied generate new cohorts using cohort_attrition() CDMConnector package: Briefly, original cohort, exclude first individuals match, individuals matching pair observation assigned cohort_start_date. matched cohort, start whole database first exclude individuals original cohort. Afterwards, exclude individuals match, individuals observation assigned cohort_start_date, finally remove many individuals required fulfill ratio. Notice matching pairs randomly assigned, probable every time execute function, generated cohorts change. Use set.seed() avoid .","code":"cdm <- generateMatchedCohortSet(cdm  = cdm,                            name = \"matched_cohort1\",                            targetCohortName = \"cohort1\",                            targetCohortId = 1)  CDMConnector::cohort_set(cdm$matched_cohort1) #> # A tibble: 2 × 7 #>   cohort_definition_id cohort_name      target_cohort_name match_sex #>                  <int> <chr>            <chr>              <lgl>     #> 1                    1 cohort_1         cohort1            TRUE      #> 2                    2 cohort_1_matched cohort1            TRUE      #> # ℹ 3 more variables: match_year_of_birth <lgl>, match_status <chr>, #> #   target_cohort_id <int> # Original cohort CDMConnector::cohort_attrition(cdm$matched_cohort1) %>% filter(cohort_definition_id == 1) #> # A tibble: 3 × 7 #>   cohort_definition_id number_records number_subjects reason_id reason           #>                  <int>          <dbl>           <dbl>     <dbl> <chr>            #> 1                    1            329             329         1 Qualifying init… #> 2                    1            329             329         2 Exclude individ… #> 3                    1            134             134         3 Exclude individ… #> # ℹ 2 more variables: excluded_records <dbl>, excluded_subjects <dbl>  # Matched cohort CDMConnector::cohort_attrition(cdm$matched_cohort1) %>% filter(cohort_definition_id == 4) #> # A tibble: 0 × 7 #> # ℹ 7 variables: cohort_definition_id <int>, number_records <dbl>, #> #   number_subjects <dbl>, reason_id <dbl>, reason <chr>, #> #   excluded_records <dbl>, excluded_subjects <dbl>"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/a03_age_sex_matching.html","id":"matchsex-parameter","dir":"Articles","previous_headings":"Use generateMatchedCohortSet() to create an age-sex matched cohort","what":"matchSex parameter","title":"Generate a matched age and sex cohort","text":"matchSex boolean parameter (TRUE/FALSE) indicating want match sex (TRUE) want (FALSE).","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/a03_age_sex_matching.html","id":"matchyear-parameter","dir":"Articles","previous_headings":"Use generateMatchedCohortSet() to create an age-sex matched cohort","what":"matchYear parameter","title":"Generate a matched age and sex cohort","text":"matchYear another boolean parameter (TRUE/FALSE) indicating want match age (TRUE) want (FALSE). Notice matchSex = FALSE matchYear = FALSE, obtain unmatched comparator cohort.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/a03_age_sex_matching.html","id":"ratio-parameter","dir":"Articles","previous_headings":"Use generateMatchedCohortSet() to create an age-sex matched cohort","what":"ratio parameter","title":"Generate a matched age and sex cohort","text":"default matching ratio 1:1 (ratio = 1). Use cohort_counts() CDMConnector check matching done desired. can modify ratio parameter tailor matched cohort. ratio can adopt values 1 Inf.","code":"CDMConnector::cohort_count(cdm$matched_cohort1) #> # A tibble: 2 × 3 #>   cohort_definition_id number_records number_subjects #>                  <int>          <dbl>           <dbl> #> 1                    1            134             134 #> 2                    2            134             134 cdm <- generateMatchedCohortSet(cdm  = cdm,                            name = \"matched_cohort2\",                            targetCohortName = \"cohort1\",                            targetCohortId = 1,                            ratio = Inf)  CDMConnector::cohort_count(cdm$matched_cohort2) #> # A tibble: 2 × 3 #>   cohort_definition_id number_records number_subjects #>                  <int>          <dbl>           <dbl> #> 1                    1            129             129 #> 2                    2            173             173"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/articles/a03_age_sex_matching.html","id":"generate-matched-cohorts-simultaneously-across-multiple-cohorts","dir":"Articles","previous_headings":"Use generateMatchedCohortSet() to create an age-sex matched cohort","what":"Generate matched cohorts simultaneously across multiple cohorts","title":"Generate a matched age and sex cohort","text":"functionalities can implemented across multiple cohorts simultaneously. Specify targetCohortId parameter cohorts interest. set NULL, cohorts present targetCohortName matched. Notice cohort (independent cohorts) matched cohort.","code":"cdm <- generateMatchedCohortSet(cdm  = cdm,                            name = \"matched_cohort3\",                            targetCohortName = \"cohort1\",                            targetCohortId = c(1,3),                            ratio = 2)  CDMConnector::cohort_set(cdm$matched_cohort3) %>% arrange(cohort_definition_id) #> # A tibble: 4 × 7 #>   cohort_definition_id cohort_name      target_cohort_name match_sex #>                  <int> <chr>            <chr>              <lgl>     #> 1                    1 cohort_1         cohort1            TRUE      #> 2                    2 cohort_1_matched cohort1            TRUE      #> 3                    3 cohort_3         cohort1            TRUE      #> 4                    4 cohort_3_matched cohort1            TRUE      #> # ℹ 3 more variables: match_year_of_birth <lgl>, match_status <chr>, #> #   target_cohort_id <int>  CDMConnector::cohort_count(cdm$matched_cohort3) %>% arrange(cohort_definition_id) #> # A tibble: 4 × 3 #>   cohort_definition_id number_records number_subjects #>                  <int>          <dbl>           <dbl> #> 1                    1            123             123 #> 2                    2            156             156 #> 3                    3            130             130 #> 4                    4            170             170"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Edward Burn. Author, maintainer. Marti Catala. Author. Marta Alcalde. Author. Yuchen Guo. Author.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Burn E, Catala M, Alcalde M, Guo Y (2024). CohortConstructor: Work Cohorts Using Common Data Model. R package version 0.0.1.","code":"@Manual{,   title = {CohortConstructor: Work With Cohorts Using a Common Data Model},   author = {Edward Burn and Marti Catala and Marta Alcalde and Yuchen Guo},   year = {2024},   note = {R package version 0.0.1}, }"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/index.html","id":"cohortconstructor","dir":"","previous_headings":"","what":"Work With Cohorts Using a Common Data Model","title":"Work With Cohorts Using a Common Data Model","text":"goal CohortConstructor help creation manipulation cohorts OMOP Common Data Model. package provides functions support cohort building pipelines additional functions support cohort evaluation.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Work With Cohorts Using a Common Data Model","text":"can install development version CohortConstructor GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"oxford-pharmacoepi/CohortConstructor\")"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/index.html","id":"creating-and-manipulating-cohorts","dir":"","previous_headings":"","what":"Creating and manipulating cohorts","title":"Work With Cohorts Using a Common Data Model","text":"","code":"library(CDMConnector) library(PatientProfiles) library(DrugUtilisation) #> Warning: package 'DrugUtilisation' was built under R version 4.2.3 library(dplyr) #> Warning: package 'dplyr' was built under R version 4.2.3 #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(CohortConstructor)  con <- DBI::dbConnect(duckdb::duckdb(), dbdir = eunomia_dir()) cdm <- cdm_from_con(con, cdm_schema = \"main\",                      write_schema = c(prefix = \"my_study_\", schema = \"main\"))"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/index.html","id":"generating-concept-based-cohorts","dir":"","previous_headings":"Creating and manipulating cohorts","what":"Generating concept based cohorts","title":"Work With Cohorts Using a Common Data Model","text":"’ll start generating set drug cohorts, using generateDrugUtilisationCohortSet DrugUtilisation R package. make two cohorts, one diclofenac another acetaminophen, combining records gap 7 days less. can see starting cohorts, add additional restrictions, following counts","code":"cdm <- generateDrugUtilisationCohortSet(cdm = cdm,                               name = \"medications\",                             conceptSet = list(\"diclofenac\" = 1124300,                                            \"acetaminophen\" = 1127433),                             gapEra = 7) cohort_set(cdm$medications) %>% glimpse() #> Rows: 2 #> Columns: 11 #> $ cohort_definition_id    <int> 1, 2 #> $ cohort_name             <chr> \"diclofenac\", \"acetaminophen\" #> $ duration_range_min      <chr> \"1\", \"1\" #> $ duration_range_max      <chr> \"Inf\", \"Inf\" #> $ impute_duration         <chr> \"none\", \"none\" #> $ gap_era                 <chr> \"7\", \"7\" #> $ prior_use_washout       <chr> \"0\", \"0\" #> $ prior_observation       <chr> \"0\", \"0\" #> $ cohort_date_range_start <chr> NA, NA #> $ cohort_date_range_end   <chr> NA, NA #> $ limit                   <chr> \"all\", \"all\" cohort_count(cdm$medications) %>% glimpse() #> Rows: 2 #> Columns: 3 #> $ cohort_definition_id <int> 2, 1 #> $ number_records       <dbl> 9363, 830 #> $ number_subjects      <dbl> 2580, 830"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/index.html","id":"require-in-date-range","dir":"","previous_headings":"Creating and manipulating cohorts","what":"Require in date range","title":"Work With Cohorts Using a Common Data Model","text":"can require individuals’ cohort start date fall within certain date range. Now ’ve applied date restrictions, can see many people records excluded","code":"cdm$medications <- cdm$medications %>%    requireInDateRange(indexDate = \"cohort_start_date\",                      dateRange = as.Date(c(\"2000-01-01\", \"2020-01-01\"))) cohort_count(cdm$medications) %>% glimpse() #> Rows: 2 #> Columns: 3 #> $ cohort_definition_id <int> 2, 1 #> $ number_records       <dbl> 2750, 397 #> $ number_subjects      <dbl> 1737, 397 cohort_attrition(cdm$medications) %>% glimpse() #> Rows: 16 #> Columns: 7 #> $ cohort_definition_id <int> 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1 #> $ number_records       <dbl> 9365, 9365, 9363, 9363, 9363, 9363, 9363, 850, 85… #> $ number_subjects      <dbl> 2580, 2580, 2580, 2580, 2580, 2580, 2580, 850, 85… #> $ reason_id            <dbl> 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 8, 8 #> $ reason               <chr> \"Qualifying initial records\", \"Duration imputatio… #> $ excluded_records     <dbl> 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 6613, … #> $ excluded_subjects    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 843, 4… cohort_attrition(cdm$medications) %>%    filter(reason == \"cohort_start_date between 2000-01-01 and 2020-01-01\") %>%    glimpse() #> Rows: 2 #> Columns: 7 #> $ cohort_definition_id <int> 2, 1 #> $ number_records       <dbl> 2750, 397 #> $ number_subjects      <dbl> 1737, 397 #> $ reason_id            <dbl> 8, 8 #> $ reason               <chr> \"cohort_start_date between 2000-01-01 and 2020-01… #> $ excluded_records     <dbl> 6613, 433 #> $ excluded_subjects    <dbl> 843, 433"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/index.html","id":"applying-demographic-requirements","dir":"","previous_headings":"Creating and manipulating cohorts","what":"Applying demographic requirements","title":"Work With Cohorts Using a Common Data Model","text":"can also add restrictions age (cohort start date) sex. can see many individuals ’ve lost applying criteria.","code":"cdm$medications <- cdm$medications %>%    requireDemographics(indexDate = \"cohort_start_date\",                       ageRange = list(c(40, 65)),                       sex = \"Female\") cohort_attrition(cdm$medications) %>%    filter(reason == \"Demographic requirements\") %>%    glimpse() #> Rows: 2 #> Columns: 7 #> $ cohort_definition_id <int> 2, 1 #> $ number_records       <dbl> 787, 75 #> $ number_subjects      <dbl> 551, 75 #> $ reason_id            <dbl> 9, 9 #> $ reason               <chr> \"Demographic requirements\", \"Demographic requirem… #> $ excluded_records     <dbl> 1963, 322 #> $ excluded_subjects    <dbl> 1186, 322"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/index.html","id":"require-presence-in-another-cohort","dir":"","previous_headings":"Creating and manipulating cohorts","what":"Require presence in another cohort","title":"Work With Cohorts Using a Common Data Model","text":"can also require individuals another cohort window. example require study participants GI bleed cohort time prior entry medications cohort.","code":"cdm <- generate_concept_cohort_set(cdm = cdm,                              name = \"gibleed\",                             concept_set = list(\"gibleed\" = 192671))  cdm$medications <- cdm$medications %>%    requireCohortIntersectFlag(targetCohortTable = \"gibleed\",                              window = c(-Inf, 0)) cohort_attrition(cdm$medications) %>%    filter(reason == \"In cohort gibleed between -Inf and 0 days relative to cohort_start_date\") %>%    glimpse() #> Rows: 2 #> Columns: 7 #> $ cohort_definition_id <int> 2, 1 #> $ number_records       <dbl> 136, 0 #> $ number_subjects      <dbl> 89, 0 #> $ reason_id            <dbl> 10, 10 #> $ reason               <chr> \"In cohort gibleed between -Inf and 0 days relati… #> $ excluded_records     <dbl> 651, 75 #> $ excluded_subjects    <dbl> 462, 75"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/index.html","id":"combining-cohorts","dir":"","previous_headings":"Creating and manipulating cohorts","what":"Combining cohorts","title":"Work With Cohorts Using a Common Data Model","text":"Currently two separate cohorts. One users diclofenac, users acetaminophen. Let’s say want create cohort people taking either diclofenac acetaminophen. create cohort like : Alternatively, might want create cohort people taking diclofenac acetaminophen. can create combination cohort like : diclofenac acetaminophen Generate combination cohort.","code":"cdm <- generateIntersectCohortSet(cdm = cdm,                                      name = \"combinations\",                                      targetCohortName = \"medications\")  cohortSet(cdm$combinations) #> # A tibble: 3 × 5 #>   cohort_definition_id cohort_name   diclofenac acetaminophen mutually_exclusive #>                  <int> <chr>              <dbl>         <dbl> <lgl>              #> 1                    1 diclofenac             1            NA FALSE              #> 2                    2 acetaminophen         NA             1 FALSE              #> 3                    3 diclofenac+a…          1             1 FALSE cohortCount(cdm$combinations) #> # A tibble: 3 × 3 #>   cohort_definition_id number_records number_subjects #>                  <int>          <dbl>           <dbl> #> 1                    2            136              89 #> 2                    1              0               0 #> 3                    3              0               0 cdmDisconnect(cdm)"},{"path":[]},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/CohortConstructor-package.html","id":null,"dir":"Reference","previous_headings":"","what":"CohortConstructor: Work With Cohorts Using a Common Data Model — CohortConstructor-package","title":"CohortConstructor: Work With Cohorts Using a Common Data Model — CohortConstructor-package","text":"package aims provide functionalities manipulate evaluate cohorts data mapped Observational Medical Outcomes Partnership Common Data Model.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/CohortConstructor-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"CohortConstructor: Work With Cohorts Using a Common Data Model — CohortConstructor-package","text":"Maintainer: Edward Burn edward.burn@ndorms.ox.ac.uk (ORCID) Authors: Marti Catala marti.catalasabate@ndorms.ox.ac.uk (ORCID) Marta Alcalde marta.alcaldeherraiz@ndorms.ox.ac.uk (ORCID) Yuchen Guo yuchen.guo@ndorms.ox.ac.uk (ORCID)","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/generateIntersectCohortSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a combination cohort set between the intersection of different\ncohorts. — generateIntersectCohortSet","title":"Generate a combination cohort set between the intersection of different\ncohorts. — generateIntersectCohortSet","text":"Generate combination cohort set intersection different cohorts.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/generateIntersectCohortSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a combination cohort set between the intersection of different\ncohorts. — generateIntersectCohortSet","text":"","code":"generateIntersectCohortSet(   cdm,   name,   targetCohortName,   targetCohortId = NULL,   mutuallyExclusive = FALSE,   returnOnlyComb = FALSE )"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/generateIntersectCohortSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a combination cohort set between the intersection of different\ncohorts. — generateIntersectCohortSet","text":"cdm cdm reference. name Name new generated cohort. targetCohortName Name existent cohort cdm create combinations. targetCohortId Ids combine target cohort. NULL cohort present table used. mutuallyExclusive Whether generated cohorts mutually exclusive . returnOnlyComb Whether get combination cohort back","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/generateIntersectCohortSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a combination cohort set between the intersection of different\ncohorts. — generateIntersectCohortSet","text":"cdm object new generated cohort set","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/generateIntersectCohortSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a combination cohort set between the intersection of different\ncohorts. — generateIntersectCohortSet","text":"","code":"# \\donttest{ library(PatientProfiles)  cdm <- mockPatientProfiles()  cdm <- generateIntersectCohortSet(   cdm = cdm,   name = \"cohort3\",   targetCohortName = \"cohort2\" )  cdm$cohort3 #> # Source:   table<cohort3> [4 x 4] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1018-azure:R 4.3.2/:memory:] #>   cohort_definition_id subject_id cohort_start_date cohort_end_date #>                  <int>      <dbl> <date>            <date>          #> 1                    1          1 2020-05-25        2020-05-25      #> 2                    3          1 2020-05-25        2020-05-25      #> 3                    1          1 2019-12-30        2019-12-30      #> 4                    2          1 2020-05-25        2020-05-25       CDMConnector::cohortSet(cdm$cohort3) #> # A tibble: 7 × 6 #>   cohort_definition_id cohort_name cohort_1 cohort_2 cohort_3 mutually_exclusive #>                  <int> <chr>          <dbl>    <dbl>    <dbl> <lgl>              #> 1                    1 cohort_1           1       NA       NA FALSE              #> 2                    2 cohort_2          NA        1       NA FALSE              #> 3                    3 cohort_1+c…        1        1       NA FALSE              #> 4                    4 cohort_3          NA       NA        1 FALSE              #> 5                    5 cohort_1+c…        1       NA        1 FALSE              #> 6                    6 cohort_2+c…       NA        1        1 FALSE              #> 7                    7 cohort_1+c…        1        1        1 FALSE               # }"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/generateMatchedCohortSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a new cohort matched cohort from a preexisting target cohort. The\nnew cohort will contain individuals not included in the target cohort with\nsame year of birth (matchYearOfBirth = TRUE) and same sex (matchSex = TRUE). — generateMatchedCohortSet","title":"Generate a new cohort matched cohort from a preexisting target cohort. The\nnew cohort will contain individuals not included in the target cohort with\nsame year of birth (matchYearOfBirth = TRUE) and same sex (matchSex = TRUE). — generateMatchedCohortSet","text":"Generate new cohort matched cohort preexisting target cohort. new cohort contain individuals included target cohort year birth (matchYearOfBirth = TRUE) sex (matchSex = TRUE).","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/generateMatchedCohortSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a new cohort matched cohort from a preexisting target cohort. The\nnew cohort will contain individuals not included in the target cohort with\nsame year of birth (matchYearOfBirth = TRUE) and same sex (matchSex = TRUE). — generateMatchedCohortSet","text":"","code":"generateMatchedCohortSet(   cdm,   name,   targetCohortName,   targetCohortId = NULL,   matchSex = TRUE,   matchYearOfBirth = TRUE,   ratio = 1 )"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/generateMatchedCohortSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a new cohort matched cohort from a preexisting target cohort. The\nnew cohort will contain individuals not included in the target cohort with\nsame year of birth (matchYearOfBirth = TRUE) and same sex (matchSex = TRUE). — generateMatchedCohortSet","text":"cdm cdm reference object. name Name new generated cohort set. targetCohortName Name target cohort match. targetCohortId Cohort definition id match target cohort. NULL cohort definition id present target cohort matched. matchSex Whether match sex. matchYearOfBirth Whether match year birth. ratio Number allowed matches per individual target cohort.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/generateMatchedCohortSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a new cohort matched cohort from a preexisting target cohort. The\nnew cohort will contain individuals not included in the target cohort with\nsame year of birth (matchYearOfBirth = TRUE) and same sex (matchSex = TRUE). — generateMatchedCohortSet","text":"cdm reference object contains new generated cohort set.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/generateMatchedCohortSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a new cohort matched cohort from a preexisting target cohort. The\nnew cohort will contain individuals not included in the target cohort with\nsame year of birth (matchYearOfBirth = TRUE) and same sex (matchSex = TRUE). — generateMatchedCohortSet","text":"","code":"library(DrugUtilisation) library(CohortConstructor) library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union cdm <- mockDrugUtilisation(numberIndividuals = 100) cdm <- cdm %>%   generateMatchedCohortSet(name = \"new_matched_cohort\",                            targetCohortName = \"cohort1\",                            targetCohortId = c(1,2),                            matchSex = TRUE,                            matchYearOfBirth = TRUE,                            ratio = 2) cdm$new_matched_cohort #> # Source:   table<new_matched_cohort> [10 x 4] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1018-azure:R 4.3.2/:memory:] #>    cohort_definition_id subject_id cohort_start_date cohort_end_date #>                   <int>      <int> <date>            <date>          #>  1                    1         87 2019-08-23        2020-01-05      #>  2                    2         83 2019-08-23        2022-06-22      #>  3                    1         79 2017-08-24        2019-02-12      #>  4                    2         55 2017-08-24        2021-02-20      #>  5                    3         55 2018-02-10        2018-08-03      #>  6                    4         79 2018-02-10        2022-04-04      #>  7                    3         86 2014-10-28        2014-11-19      #>  8                    4         42 2014-10-28        2021-03-29      #>  9                    1         96 2010-08-26        2015-04-13      #> 10                    2         78 2010-08-26        2012-02-25"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/getIdentifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Get random identifiers not present in a table based on a prefix. — getIdentifier","title":"Get random identifiers not present in a table based on a prefix. — getIdentifier","text":"Get random identifiers present table based prefix.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/getIdentifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get random identifiers not present in a table based on a prefix. — getIdentifier","text":"","code":"getIdentifier(x, len = 1, prefix = \"\", nchar = 5)"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/getIdentifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get random identifiers not present in a table based on a prefix. — getIdentifier","text":"x Table. len Number identifiers. prefix Character vector prefix identifiers. nchar Number random characters added prefix.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/getIdentifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get random identifiers not present in a table based on a prefix. — getIdentifier","text":"Character vector identifiers present x.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/joinOverlap.html","id":null,"dir":"Reference","previous_headings":"","what":"Join overlapping periods in single periods. — joinOverlap","title":"Join overlapping periods in single periods. — joinOverlap","text":"Join overlapping periods single periods.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/joinOverlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join overlapping periods in single periods. — joinOverlap","text":"","code":"joinOverlap(   x,   start = \"cohort_start_date\",   end = \"cohort_end_date\",   by = c(\"cohort_definition_id\", \"subject_id\"),   gap = 0 )"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/joinOverlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join overlapping periods in single periods. — joinOverlap","text":"x Table cdm. start Column indicates start periods. end Column indicates end periods. Variables group . gap Distance exposures consider overlap.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/joinOverlap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join overlapping periods in single periods. — joinOverlap","text":"Table cdm start, end columns. Periods going overlap .","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireAge.html","id":null,"dir":"Reference","previous_headings":"","what":"Restrict cohort on age — requireAge","title":"Restrict cohort on age — requireAge","text":"Restrict cohort age","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireAge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restrict cohort on age — requireAge","text":"","code":"requireAge(cohort, indexDate = \"cohort_start_date\", ageRange = list(c(0, 150)))"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireAge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Restrict cohort on age — requireAge","text":"cohort cohort table cdm reference indexDate Variable cohort contains date compute demographics characteristics restrict . ageRange list minimum maximum age","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireAge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Restrict cohort on age — requireAge","text":"cohort table records individuals satisfying age requirement","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireAge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Restrict cohort on age — requireAge","text":"","code":"library(DrugUtilisation) library(CohortConstructor) cdm <- mockDrugUtilisation(numberIndividuals = 100) cdm$cohort1 %>%   requireAge(indexDate = \"cohort_start_date\",              ageRange = list(c(18, 65))) #> # Source:   SQL [?? x 4] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1018-azure:R 4.3.2/:memory:] #>    cohort_definition_id subject_id cohort_start_date cohort_end_date #>                   <int>      <int> <date>            <date>          #>  1                    1          2 2018-05-29        2018-06-10      #>  2                    2          3 2001-08-11        2007-04-14      #>  3                    2          6 2010-11-19        2011-05-04      #>  4                    2          8 2020-09-29        2020-12-09      #>  5                    1         11 2021-08-15        2021-09-26      #>  6                    3         12 2020-09-20        2020-12-11      #>  7                    3         13 1981-12-15        1982-10-31      #>  8                    1         14 1976-03-20        1978-11-23      #>  9                    1         15 2014-02-01        2014-12-31      #> 10                    3         17 2006-07-30        2007-02-15      #> # ℹ more rows"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireCohortIntersectFlag.html","id":null,"dir":"Reference","previous_headings":"","what":"Require cohort subjects are present in another cohort — requireCohortIntersectFlag","title":"Require cohort subjects are present in another cohort — requireCohortIntersectFlag","text":"Require cohort subjects present another cohort","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireCohortIntersectFlag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Require cohort subjects are present in another cohort — requireCohortIntersectFlag","text":"","code":"requireCohortIntersectFlag(   x,   targetCohortTable,   targetCohortId = NULL,   indexDate = \"cohort_start_date\",   targetStartDate = \"cohort_start_date\",   targetEndDate = \"cohort_end_date\",   window = list(c(0, Inf)),   negate = FALSE )"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireCohortIntersectFlag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Require cohort subjects are present in another cohort — requireCohortIntersectFlag","text":"x Cohort table targetCohortTable name cohort want check overlap targetCohortId vector cohort definition ids include indexDate Variable x contains date compute intersection. targetStartDate date reference cohort table, either start (overlap) (incidence) targetEndDate date reference cohort table, either end (overlap) NULL (incidence) window window consider events negate set TRUE, criteria applied exclusion rather inclusion (.e. require absence another cohort)","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireCohortIntersectFlag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Require cohort subjects are present in another cohort — requireCohortIntersectFlag","text":"Cohort table cohort kept","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireCohortIntersectFlag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Require cohort subjects are present in another cohort — requireCohortIntersectFlag","text":"","code":"library(DrugUtilisation) library(CohortConstructor) cdm <- mockDrugUtilisation(numberIndividuals = 100) cdm$cohort1 %>%   requireCohortIntersectFlag(targetCohortTable = \"cohort2\",                              targetCohortId = 1,                              indexDate = \"cohort_start_date\",                              window = c(-Inf, 0)) #> # Source:   SQL [?? x 4] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1018-azure:R 4.3.2/:memory:] #>    cohort_definition_id subject_id cohort_start_date cohort_end_date #>                   <int>      <int> <date>            <date>          #>  1                    1          2 2018-05-29        2018-06-10      #>  2                    2          3 2001-08-11        2007-04-14      #>  3                    1          4 2007-10-01        2009-11-16      #>  4                    2          8 2020-09-29        2020-12-09      #>  5                    2         10 2019-08-18        2020-09-14      #>  6                    3         12 2020-09-20        2020-12-11      #>  7                    1         15 2014-02-01        2014-12-31      #>  8                    3         20 2000-11-08        2003-01-10      #>  9                    1         22 2020-12-14        2020-12-26      #> 10                    2         33 2021-02-16        2021-02-23      #> # ℹ more rows"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireDemographics.html","id":null,"dir":"Reference","previous_headings":"","what":"Restrict cohort on patient demographics — requireDemographics","title":"Restrict cohort on patient demographics — requireDemographics","text":"Restrict cohort patient demographics","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireDemographics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restrict cohort on patient demographics — requireDemographics","text":"","code":"requireDemographics(   cohort,   indexDate = \"cohort_start_date\",   ageRange = list(c(0, 150)),   sex = c(\"Both\"),   minPriorObservation = 0,   minFutureObservation = 0 )"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireDemographics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Restrict cohort on patient demographics — requireDemographics","text":"cohort cohort table cdm reference indexDate Variable cohort contains date compute demographics characteristics restrict . ageRange list minimum maximum age sex Can \"\", \"Male\" \"Female\". one latter, sex included. minPriorObservation minimum number prior observation days database. minFutureObservation minimum number future observation days database.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireDemographics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Restrict cohort on patient demographics — requireDemographics","text":"cohort table records individuals satisfying demographic requirements","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireDemographics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Restrict cohort on patient demographics — requireDemographics","text":"","code":"library(DrugUtilisation) library(CohortConstructor) cdm <- mockDrugUtilisation(numberIndividuals = 100) cdm$cohort1 %>%   requireDemographics(indexDate = \"cohort_start_date\",                       ageRange = list(c(18, 65)),                       sex = \"Female\",                       minPriorObservation = 365) #> # Source:   SQL [?? x 4] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1018-azure:R 4.3.2/:memory:] #>    cohort_definition_id subject_id cohort_start_date cohort_end_date #>                   <int>      <int> <date>            <date>          #>  1                    1          2 2018-05-29        2018-06-10      #>  2                    3         17 2006-07-30        2007-02-15      #>  3                    1         18 2003-03-14        2004-05-08      #>  4                    2         27 2020-05-27        2020-06-26      #>  5                    2         30 1988-05-24        1991-03-27      #>  6                    1         32 2007-05-08        2007-11-29      #>  7                    1         34 2011-10-26        2014-07-07      #>  8                    1         48 1995-07-23        1997-12-11      #>  9                    3         51 2021-02-15        2022-05-02      #> 10                    1         53 1974-10-11        1978-03-06      #> # ℹ more rows"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireFutureObservation.html","id":null,"dir":"Reference","previous_headings":"","what":"Restrict cohort on future observation — requireFutureObservation","title":"Restrict cohort on future observation — requireFutureObservation","text":"Restrict cohort future observation","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireFutureObservation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restrict cohort on future observation — requireFutureObservation","text":"","code":"requireFutureObservation(   cohort,   indexDate = \"cohort_start_date\",   minFutureObservation = 0 )"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireFutureObservation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Restrict cohort on future observation — requireFutureObservation","text":"cohort cohort table cdm reference indexDate Variable cohort contains date compute demographics characteristics restrict . minFutureObservation minimum number future observation days database.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireFutureObservation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Restrict cohort on future observation — requireFutureObservation","text":"cohort table records individuals satisfying future observation requirement","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireFutureObservation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Restrict cohort on future observation — requireFutureObservation","text":"","code":"library(DrugUtilisation) library(CohortConstructor) cdm <- mockDrugUtilisation(numberIndividuals = 100) cdm$cohort1 %>%   requireFutureObservation(indexDate = \"cohort_start_date\",                            minFutureObservation = 30) #> # Source:   SQL [?? x 4] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1018-azure:R 4.3.2/:memory:] #>    cohort_definition_id subject_id cohort_start_date cohort_end_date #>                   <int>      <int> <date>            <date>          #>  1                    2          1 1989-07-31        1993-01-04      #>  2                    1          2 2018-05-29        2018-06-10      #>  3                    2          3 2001-08-11        2007-04-14      #>  4                    1          4 2007-10-01        2009-11-16      #>  5                    3          5 1983-11-28        1988-02-27      #>  6                    2          6 2010-11-19        2011-05-04      #>  7                    1          7 1970-09-20        1971-10-31      #>  8                    2          8 2020-09-29        2020-12-09      #>  9                    3          9 2016-05-17        2018-03-01      #> 10                    1         11 2021-08-15        2021-09-26      #> # ℹ more rows"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireInDateRange.html","id":null,"dir":"Reference","previous_headings":"","what":"Require that an index date is within a date range — requireInDateRange","title":"Require that an index date is within a date range — requireInDateRange","text":"Require index date within date range","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireInDateRange.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Require that an index date is within a date range — requireInDateRange","text":"","code":"requireInDateRange(   cohort,   indexDate = \"cohort_start_date\",   dateRange = as.Date(c(NA, NA)) )"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireInDateRange.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Require that an index date is within a date range — requireInDateRange","text":"cohort cohort table cdm reference indexDate Variable cohort contains index date interest dateRange window time index date must observed","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireInDateRange.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Require that an index date is within a date range — requireInDateRange","text":"cohort table cohort entries outside date range dropped","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireInDateRange.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Require that an index date is within a date range — requireInDateRange","text":"","code":"library(DrugUtilisation) library(CohortConstructor) cdm <- mockDrugUtilisation(numberIndividuals = 100) cdm$cohort1 %>%   requireInDateRange(indexDate = \"cohort_start_date\",                      dateRange = as.Date(c(\"2010-01-01\", \"2019-01-01\"))) #> # Source:   SQL [?? x 4] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1018-azure:R 4.3.2/:memory:] #>    cohort_definition_id subject_id cohort_start_date cohort_end_date #>                   <int>      <int> <date>            <date>          #>  1                    1          2 2018-05-29        2018-06-10      #>  2                    2          6 2010-11-19        2011-05-04      #>  3                    3          9 2016-05-17        2018-03-01      #>  4                    1         15 2014-02-01        2014-12-31      #>  5                    3         26 2014-03-18        2014-06-06      #>  6                    1         34 2011-10-26        2014-07-07      #>  7                    2         36 2018-01-30        2019-04-08      #>  8                    3         38 2018-12-19        2019-07-07      #>  9                    2         44 2016-02-25        2017-02-03      #> 10                    2         45 2016-10-04        2017-01-24      #> # ℹ more rows"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requirePriorObservation.html","id":null,"dir":"Reference","previous_headings":"","what":"Restrict cohort on prior observation — requirePriorObservation","title":"Restrict cohort on prior observation — requirePriorObservation","text":"Restrict cohort prior observation","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requirePriorObservation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restrict cohort on prior observation — requirePriorObservation","text":"","code":"requirePriorObservation(   cohort,   indexDate = \"cohort_start_date\",   minPriorObservation = 0 )"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requirePriorObservation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Restrict cohort on prior observation — requirePriorObservation","text":"cohort cohort table cdm reference indexDate Variable cohort contains date compute demographics characteristics restrict . minPriorObservation minimum number prior observation days database.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requirePriorObservation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Restrict cohort on prior observation — requirePriorObservation","text":"cohort table records individuals satisfying prior observation requirement","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requirePriorObservation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Restrict cohort on prior observation — requirePriorObservation","text":"","code":"library(DrugUtilisation) library(CohortConstructor) cdm <- mockDrugUtilisation(numberIndividuals = 100) cdm$cohort1 %>%   requirePriorObservation(indexDate = \"cohort_start_date\",                           minPriorObservation = 365) #> # Source:   SQL [?? x 4] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1018-azure:R 4.3.2/:memory:] #>    cohort_definition_id subject_id cohort_start_date cohort_end_date #>                   <int>      <int> <date>            <date>          #>  1                    2          1 1989-07-31        1993-01-04      #>  2                    1          2 2018-05-29        2018-06-10      #>  3                    2          3 2001-08-11        2007-04-14      #>  4                    1          4 2007-10-01        2009-11-16      #>  5                    3          5 1983-11-28        1988-02-27      #>  6                    2          6 2010-11-19        2011-05-04      #>  7                    1          7 1970-09-20        1971-10-31      #>  8                    2          8 2020-09-29        2020-12-09      #>  9                    1         14 1976-03-20        1978-11-23      #> 10                    3         16 2020-08-03        2020-08-09      #> # ℹ more rows"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireSex.html","id":null,"dir":"Reference","previous_headings":"","what":"Restrict cohort on sex — requireSex","title":"Restrict cohort on sex — requireSex","text":"Restrict cohort sex","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireSex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restrict cohort on sex — requireSex","text":"","code":"requireSex(cohort, sex = c(\"Both\"))"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireSex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Restrict cohort on sex — requireSex","text":"cohort cohort table cdm reference sex Can \"\", \"Male\" \"Female\". one latter, sex included.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireSex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Restrict cohort on sex — requireSex","text":"cohort table records individuals satisfying sex requirement","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireSex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Restrict cohort on sex — requireSex","text":"","code":"library(DrugUtilisation) library(CohortConstructor) cdm <- mockDrugUtilisation(numberIndividuals = 100) cdm$cohort1 %>%   requireSex(sex = \"Female\") #> # Source:   SQL [?? x 4] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1018-azure:R 4.3.2/:memory:] #>    cohort_definition_id subject_id cohort_start_date cohort_end_date #>                   <int>      <int> <date>            <date>          #>  1                    1          2 2018-05-29        2018-06-10      #>  2                    3          5 1983-11-28        1988-02-27      #>  3                    3          9 2016-05-17        2018-03-01      #>  4                    3         16 2020-08-03        2020-08-09      #>  5                    3         17 2006-07-30        2007-02-15      #>  6                    1         18 2003-03-14        2004-05-08      #>  7                    2         19 2022-08-12        2022-08-24      #>  8                    2         27 2020-05-27        2020-06-26      #>  9                    1         32 2007-05-08        2007-11-29      #> 10                    1         34 2011-10-26        2014-07-07      #> # ℹ more rows"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/restrictToFirstEntry.html","id":null,"dir":"Reference","previous_headings":"","what":"Restrict cohort to first entry by index date — restrictToFirstEntry","title":"Restrict cohort to first entry by index date — restrictToFirstEntry","text":"Restrict cohort first entry index date","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/restrictToFirstEntry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restrict cohort to first entry by index date — restrictToFirstEntry","text":"","code":"restrictToFirstEntry(cohort, indexDate = \"cohort_start_date\")"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/restrictToFirstEntry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Restrict cohort to first entry by index date — restrictToFirstEntry","text":"cohort cohort table cdm reference indexDate indexDate Variable cohort contains date restrict ","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/restrictToFirstEntry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Restrict cohort to first entry by index date — restrictToFirstEntry","text":"cohort table cdm reference","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/splitOverlap.html","id":null,"dir":"Reference","previous_headings":"","what":"To split overlaping periods in non overlaping period. — splitOverlap","title":"To split overlaping periods in non overlaping period. — splitOverlap","text":"split overlaping periods non overlaping period.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/splitOverlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To split overlaping periods in non overlaping period. — splitOverlap","text":"","code":"splitOverlap(   x,   start = \"cohort_start_date\",   end = \"cohort_end_date\",   by = c(\"cohort_definition_id\", \"subject_id\") )"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/splitOverlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To split overlaping periods in non overlaping period. — splitOverlap","text":"x Table cdm. start Column indicates start periods. end Column indicates end periods. Variables group .","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/splitOverlap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"To split overlaping periods in non overlaping period. — splitOverlap","text":"Table cdm start, end columns. Periods going overlap .","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/trimToDateRange.html","id":null,"dir":"Reference","previous_headings":"","what":"Trim cohort dates to be within a date range — trimToDateRange","title":"Trim cohort dates to be within a date range — trimToDateRange","text":"Trim cohort dates within date range","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/trimToDateRange.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trim cohort dates to be within a date range — trimToDateRange","text":"","code":"trimToDateRange(   cohort,   startDate = \"cohort_start_date\",   endDate = \"cohort_end_date\",   dateRange = as.Date(c(NA, NA)) )"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/trimToDateRange.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trim cohort dates to be within a date range — trimToDateRange","text":"cohort cohort table cdm reference startDate Variable earliest date endDate Variable latest date dateRange window time index date must observed","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/trimToDateRange.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trim cohort dates to be within a date range — trimToDateRange","text":"cohort table record timings updated within date range. records time outside range dropped.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/trimToDateRange.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trim cohort dates to be within a date range — trimToDateRange","text":"","code":"library(DrugUtilisation) library(CohortConstructor) cdm <- mockDrugUtilisation(numberIndividuals = 100) cdm$cohort1 %>%   trimToDateRange(startDate = \"cohort_start_date\",                   endDate = \"cohort_end_date\",                   dateRange = as.Date(c(\"2015-01-01\",                                         \"2015-12-31\"))) #> # Source:   SQL [3 x 4] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1018-azure:R 4.3.2/:memory:] #>   cohort_definition_id subject_id cohort_start_date cohort_end_date #>                  <int>      <int> <date>            <date>          #> 1                    3         49 2015-01-01        2015-12-31      #> 2                    1         93 2015-01-01        2015-12-31      #> 3                    1         96 2015-01-01        2015-04-13"}]
