[{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Marti Catala. Author. Edward Burn. Author, maintainer.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Catala M, Burn E (2023). CohortConstructor: Generate Cohorts Individuals OMOP Common Data Model. R package version 0.0.1.","code":"@Manual{,   title = {CohortConstructor: Generate Cohorts of Individuals in the OMOP Common Data Model},   author = {Marti Catala and Edward Burn},   year = {2023},   note = {R package version 0.0.1}, }"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/index.html","id":"cohortconstructor","dir":"","previous_headings":"","what":"Generate Cohorts of Individuals in the OMOP Common Data Model","title":"Generate Cohorts of Individuals in the OMOP Common Data Model","text":"goal CohortConstructor help creation manipulation cohorts OMOP Common Data Model.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Generate Cohorts of Individuals in the OMOP Common Data Model","text":"can install development version CohortConstructor GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"oxford-pharmacoepi/CohortConstructor\")"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/index.html","id":"example-usage","dir":"","previous_headings":"","what":"Example usage","title":"Generate Cohorts of Individuals in the OMOP Common Data Model","text":"","code":"library(CDMConnector) library(PatientProfiles) library(CohortConstructor)  con <- DBI::dbConnect(duckdb::duckdb(), dbdir = eunomia_dir()) cdm <- cdm_from_con(con, cdm_schema = \"main\",                      write_schema = c(prefix = \"my_study_\", schema = \"main\"))"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/index.html","id":"generating-concept-based-cohorts","dir":"","previous_headings":"Example usage","what":"Generating concept based cohorts","title":"Generate Cohorts of Individuals in the OMOP Common Data Model","text":"","code":"cdm <- generate_concept_cohort_set(cdm = cdm,                              name = \"medications\",                             concept_set = list(\"diclofenac\" = 1124300,                                                \"acetaminophen\" = 1127433)) cohort_set(cdm$medications) #> # A tibble: 2 × 6 #>   cohort_definition_id cohort_name   limit prior_observation future_observation #>                  <int> <chr>         <chr>             <dbl>              <dbl> #> 1                    1 diclofenac    first                 0                  0 #> 2                    2 acetaminophen first                 0                  0 #> # ℹ 1 more variable: end <chr> cohort_count(cdm$medications) #> # A tibble: 2 × 3 #>   cohort_definition_id number_records number_subjects #>                  <int>          <dbl>           <dbl> #> 1                    1            830             830 #> 2                    2           2580            2580"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/index.html","id":"applying-demographic-requirements","dir":"","previous_headings":"Example usage","what":"Applying demographic requirements","title":"Generate Cohorts of Individuals in the OMOP Common Data Model","text":"","code":"cdm$medications %>%    requireDemographics(ageRange = list(c(40, 65)),                       sex = \"Female\") #> # Source:   SQL [?? x 4] #> # Database: DuckDB 0.8.1 [eburn@Windows 10 x64:R 4.2.1/C:\\Users\\eburn\\AppData\\Local\\Temp\\Rtmpqm0Jdd\\file42405cf744a.duckdb] #>    cohort_definition_id subject_id cohort_start_date cohort_end_date #>                   <int>      <int> <date>            <date>          #>  1                    1        730 2002-11-18        2018-12-16      #>  2                    1       1169 1975-12-23        2018-08-27      #>  3                    1       1808 2003-12-18        2019-06-05      #>  4                    1       2858 1953-05-26        2019-05-29      #>  5                    1       2909 1986-09-03        2007-07-23      #>  6                    1       2939 1997-10-31        2018-09-04      #>  7                    1       3175 1999-05-02        2018-09-04      #>  8                    1       5240 1984-05-31        2019-03-12      #>  9                    2       1338 1997-02-22        2019-06-21      #> 10                    2       2026 2009-02-11        2019-06-19      #> # ℹ more rows cohort_set(cdm$medications) #> # A tibble: 2 × 6 #>   cohort_definition_id cohort_name   limit prior_observation future_observation #>                  <int> <chr>         <chr>             <dbl>              <dbl> #> 1                    1 diclofenac    first                 0                  0 #> 2                    2 acetaminophen first                 0                  0 #> # ℹ 1 more variable: end <chr> cohort_count(cdm$medications) #> # A tibble: 2 × 3 #>   cohort_definition_id number_records number_subjects #>                  <int>          <dbl>           <dbl> #> 1                    1            156             156 #> 2                    2             76              76"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/index.html","id":"combining-cohorts","dir":"","previous_headings":"Example usage","what":"Combining cohorts","title":"Generate Cohorts of Individuals in the OMOP Common Data Model","text":"Generate combination cohort.","code":"cdm <- generateCombinationCohortSet(cdm = cdm,                                      name = \"combinations\",                                      targetCohortName = \"medications\")    cohortSet(cdm$combinations) #> # A tibble: 3 × 5 #>   cohort_definition_id cohort_name   diclofenac acetaminophen mutually_exclusive #>                  <int> <chr>              <dbl>         <dbl> <lgl>              #> 1                    1 diclofenac             1            NA FALSE              #> 2                    2 acetaminophen         NA             1 FALSE              #> 3                    3 diclofenac+a…          1             1 FALSE cohortCount(cdm$combinations) #> # A tibble: 3 × 3 #>   cohort_definition_id number_records number_subjects #>                  <int>          <dbl>           <dbl> #> 1                    1            830             830 #> 2                    2           2580            2580 #> 3                    3            805             805   cdmDisconnect(cdm)"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/CohortConstructor-package.html","id":null,"dir":"Reference","previous_headings":"","what":"CohortConstructor: Generate Cohorts of Individuals in the OMOP Common Data Model — CohortConstructor-package","title":"CohortConstructor: Generate Cohorts of Individuals in the OMOP Common Data Model — CohortConstructor-package","text":"package aims provide functionalities create cohorts OMOP Common Data Model.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/CohortConstructor-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"CohortConstructor: Generate Cohorts of Individuals in the OMOP Common Data Model — CohortConstructor-package","text":"Maintainer: Edward Burn edward.burn@ndorms.ox.ac.uk (ORCID) Authors: Marti Catala marti.catalasabate@ndorms.ox.ac.uk (ORCID)","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/generateCombinationCohortSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a combination cohort set between the intersection of different\ncohorts. — generateCombinationCohortSet","title":"Generate a combination cohort set between the intersection of different\ncohorts. — generateCombinationCohortSet","text":"Generate combination cohort set intersection different cohorts.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/generateCombinationCohortSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a combination cohort set between the intersection of different\ncohorts. — generateCombinationCohortSet","text":"","code":"generateCombinationCohortSet(   cdm,   name,   targetCohortName,   targetCohortId = NULL,   mutuallyExclusive = FALSE )"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/generateCombinationCohortSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a combination cohort set between the intersection of different\ncohorts. — generateCombinationCohortSet","text":"cdm cdm reference. name Name new generated cohort. targetCohortName Name existent cohort cdm create combinations. targetCohortId Ids combine target cohort. NULL cohort present table used. mutuallyExclusive Wheather generated cohorts mutually exclusive .","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/generateCombinationCohortSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a combination cohort set between the intersection of different\ncohorts. — generateCombinationCohortSet","text":"cdm object new generated cohort set","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/generateCombinationCohortSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a combination cohort set between the intersection of different\ncohorts. — generateCombinationCohortSet","text":"","code":"# \\donttest{ library(PatientProfiles)  cdm <- mockPatientProfiles()  cdm <- generateCombinationCohortSet(   cdm = cdm,   name = \"cohort3\",   targetCohortName = \"cohort2\" )  cdm$cohort3 #> # Source:   table<cohort3> [4 x 4] #> # Database: DuckDB v0.9.2 [unknown@Linux 6.2.0-1018-azure:R 4.3.2/:memory:] #>   cohort_definition_id subject_id cohort_start_date cohort_end_date #>                  <int>      <dbl> <date>            <date>          #> 1                    3          1 2020-05-25        2020-05-25      #> 2                    1          1 2020-05-25        2020-05-25      #> 3                    2          1 2020-05-25        2020-05-25      #> 4                    1          1 2019-12-30        2019-12-30       CDMConnector::cohortSet(cdm$cohort3) #> # A tibble: 7 × 6 #>   cohort_definition_id cohort_name cohort_1 cohort_2 cohort_3 mutually_exclusive #>                  <int> <chr>          <dbl>    <dbl>    <dbl> <lgl>              #> 1                    1 cohort_1           1       NA       NA FALSE              #> 2                    2 cohort_2          NA        1       NA FALSE              #> 3                    3 cohort_1+c…        1        1       NA FALSE              #> 4                    4 cohort_3          NA       NA        1 FALSE              #> 5                    5 cohort_1+c…        1       NA        1 FALSE              #> 6                    6 cohort_2+c…       NA        1        1 FALSE              #> 7                    7 cohort_1+c…        1        1        1 FALSE               # }"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/generateMatchedCohortSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a new cohort matched cohort from a preexisting target cohort. The\nnew cohort will contain individuals not included in the target cohort with\nsame year of birth (matchYearOfBirth = TRUE) and same sex (matchSex = TRUE). — generateMatchedCohortSet","title":"Generate a new cohort matched cohort from a preexisting target cohort. The\nnew cohort will contain individuals not included in the target cohort with\nsame year of birth (matchYearOfBirth = TRUE) and same sex (matchSex = TRUE). — generateMatchedCohortSet","text":"Generate new cohort matched cohort preexisting target cohort. new cohort contain individuals included target cohort year birth (matchYearOfBirth = TRUE) sex (matchSex = TRUE).","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/generateMatchedCohortSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a new cohort matched cohort from a preexisting target cohort. The\nnew cohort will contain individuals not included in the target cohort with\nsame year of birth (matchYearOfBirth = TRUE) and same sex (matchSex = TRUE). — generateMatchedCohortSet","text":"","code":"generateMatchedCohortSet(   cdm,   name,   targetCohortName,   targetCohortId = NULL,   matchSex = TRUE,   matchYearOfBirth = TRUE,   ratio = 1 )"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/generateMatchedCohortSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a new cohort matched cohort from a preexisting target cohort. The\nnew cohort will contain individuals not included in the target cohort with\nsame year of birth (matchYearOfBirth = TRUE) and same sex (matchSex = TRUE). — generateMatchedCohortSet","text":"cdm cdm reference object. name Name new generated cohort set. targetCohortName Name target cohort match. targetCohortId Cohort definition id match target cohort. NULL cohort definition id present target cohort matched. matchSex Whether match sex. matchYearOfBirth Whether match year birth. ratio Number allowed matches per individual target cohort.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/generateMatchedCohortSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a new cohort matched cohort from a preexisting target cohort. The\nnew cohort will contain individuals not included in the target cohort with\nsame year of birth (matchYearOfBirth = TRUE) and same sex (matchSex = TRUE). — generateMatchedCohortSet","text":"cdm reference object contains new generated cohort set.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/getIdentifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Get ramdon identifies not present in a table based on a prefix. — getIdentifier","title":"Get ramdon identifies not present in a table based on a prefix. — getIdentifier","text":"Get ramdon identifies present table based prefix.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/getIdentifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get ramdon identifies not present in a table based on a prefix. — getIdentifier","text":"","code":"getIdentifier(x, len = 1, prefix = \"\", nchar = 5)"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/getIdentifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get ramdon identifies not present in a table based on a prefix. — getIdentifier","text":"x Table. len Number identifiers. prefix Character vector prefix identifiers. nchar Number random characters added prefix.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/getIdentifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get ramdon identifies not present in a table based on a prefix. — getIdentifier","text":"Character vector identifiers present x.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/joinOverlap.html","id":null,"dir":"Reference","previous_headings":"","what":"Join overlapping periods in single periods. — joinOverlap","title":"Join overlapping periods in single periods. — joinOverlap","text":"Join overlapping periods single periods.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/joinOverlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join overlapping periods in single periods. — joinOverlap","text":"","code":"joinOverlap(   x,   start = \"cohort_start_date\",   end = \"cohort_end_date\",   by = c(\"cohort_definition_id\", \"subject_id\"),   gap = 0 )"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/joinOverlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join overlapping periods in single periods. — joinOverlap","text":"x Table cdm. start Column indicates start periods. end Column indicates end periods. Variables group . gap Distance exposures consider overlap.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/joinOverlap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join overlapping periods in single periods. — joinOverlap","text":"Table cdm start, end columns. Periods going overlpa .","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireAge.html","id":null,"dir":"Reference","previous_headings":"","what":"Restrict cohort on age — requireAge","title":"Restrict cohort on age — requireAge","text":"Restrict cohort age","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireAge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restrict cohort on age — requireAge","text":"","code":"requireAge(cohort, indexDate = \"cohort_start_date\", ageRange = list(c(0, 150)))"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireAge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Restrict cohort on age — requireAge","text":"cohort cohort table cdm reference indexDate Variable cohort contains date compute demographics characteristics restrict . ageRange list minimum maximum age","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireDemographics.html","id":null,"dir":"Reference","previous_headings":"","what":"Restrict cohort on patient demographics — requireDemographics","title":"Restrict cohort on patient demographics — requireDemographics","text":"Restrict cohort patient demographics","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireDemographics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restrict cohort on patient demographics — requireDemographics","text":"","code":"requireDemographics(   cohort,   indexDate = \"cohort_start_date\",   ageRange = list(c(0, 150)),   sex = c(\"Both\"),   minPriorObservation = 0,   minFutureObservation = 0 )"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireDemographics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Restrict cohort on patient demographics — requireDemographics","text":"cohort cohort table cdm reference indexDate Variable cohort contains date compute demographics characteristics restrict . ageRange list minimum maximum age sex Can \"\", \"Male\" \"Female\". one latter, sex included. minPriorObservation mimimum number prior observation days database. minFutureObservation minimum number future observation days database.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireFutureObservation.html","id":null,"dir":"Reference","previous_headings":"","what":"Restrict cohort on future observation — requireFutureObservation","title":"Restrict cohort on future observation — requireFutureObservation","text":"Restrict cohort future observation","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireFutureObservation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restrict cohort on future observation — requireFutureObservation","text":"","code":"requireFutureObservation(   cohort,   indexDate = \"cohort_start_date\",   minFutureObservation = 0 )"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireFutureObservation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Restrict cohort on future observation — requireFutureObservation","text":"cohort cohort table cdm reference indexDate Variable cohort contains date compute demographics characteristics restrict . minFutureObservation minimum number future observation days database.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requirePriorObservation.html","id":null,"dir":"Reference","previous_headings":"","what":"Restrict cohort on prior observation — requirePriorObservation","title":"Restrict cohort on prior observation — requirePriorObservation","text":"Restrict cohort prior observation","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requirePriorObservation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restrict cohort on prior observation — requirePriorObservation","text":"","code":"requirePriorObservation(   cohort,   indexDate = \"cohort_start_date\",   minPriorObservation = 0 )"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requirePriorObservation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Restrict cohort on prior observation — requirePriorObservation","text":"cohort cohort table cdm reference indexDate Variable cohort contains date compute demographics characteristics restrict . minPriorObservation mimimum number prior observation days database.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireSex.html","id":null,"dir":"Reference","previous_headings":"","what":"Restrict cohort on sex — requireSex","title":"Restrict cohort on sex — requireSex","text":"Restrict cohort sex","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireSex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restrict cohort on sex — requireSex","text":"","code":"requireSex(cohort, sex = c(\"Both\"))"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/requireSex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Restrict cohort on sex — requireSex","text":"cohort cohort table cdm reference sex Can \"\", \"Male\" \"Female\". one latter, sex included.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/splitOverlap.html","id":null,"dir":"Reference","previous_headings":"","what":"To split overlaping periods in non overlaping period. — splitOverlap","title":"To split overlaping periods in non overlaping period. — splitOverlap","text":"split overlaping periods non overlaping period.","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/splitOverlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To split overlaping periods in non overlaping period. — splitOverlap","text":"","code":"splitOverlap(   x,   start = \"cohort_start_date\",   end = \"cohort_end_date\",   by = c(\"cohort_definition_id\", \"subject_id\") )"},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/splitOverlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To split overlaping periods in non overlaping period. — splitOverlap","text":"x Table cdm. start Column indicates start periods. end Column indicates end periods. Variables group .","code":""},{"path":"https://darwin-eu-dev.github.io/DrugUtilisation/reference/splitOverlap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"To split overlaping periods in non overlaping period. — splitOverlap","text":"Table cdm start, end columns. Periods going overlpa .","code":""}]
